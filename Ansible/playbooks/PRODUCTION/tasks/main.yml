---
# tasks file for PRODUCTION
- name: "yum update"
  yum:
    name: '*'
    state: latest

- name: "yum install epel, nodejs, npm "
  yum:
    name: "{{ pac }}"
    state: present

- name: Install Node.js and npm.
  yum: 
    name: npm
    state: present
    enablerepo: epel

- name: "yum install Remi - 7"
  yum:
    name: "https://rpms.remirepo.net/enterprise/remi-release-7.rpm"
    state: present
  when: ansible_distribution_major_version == "7"
  notify: "CentOS --version"

- name: "yum install Remi - 8"
  yum:
    name: "https://rpms.remirepo.net/enterprise/remi-release-8.rpm"
    state: present
  when: ansible_distribution_major_version == "8"
  notify: "CentOS --version"

- name: "Import GPG key"
  rpm_key:
    key: "https://rpms.remirepo.net/RPM-GPG-KEY-remi"
    state: present

- name: "Create user {{ user }}"
  user:
    name: "{{ user }}"
    # password: "$6$ansible$KAJ/MBQw3q.OCmVVCZ7B3aAozUZYM6INJWnU6p95g95K9ROqDCJ8nEFXw5Wrn4WHXYvHfi/VUkJdZZ0HpKzhq0"
    shell: /bin/bash
    groups: 
      - 'users'
      - 'wheel'
    append: yes

- name: "Take ssh_key for {{ user }}"
  authorized_key:
    user: "{{ user }}"
    state: present
    key: "{{ lookup('file', '/home/{{ home }}/.ssh/id_rsa.pub') }}"

- name: "Change sshd_config(PermitRootLogin)"
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: "^PermitRootLogin yes"
    line: "PermitRootLogin No"
  notify: "Restart sshd"
  # shell:
  #   cmd: "sed -i 's/PermitRootLogin yes/PermitRootLogin no/g' /etc/ssh/sshd_config"
  
- name: "Change sshd_config(PasswordAuthentication)"
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: "^#?PasswordAuthentication yes"
    line: "PasswordAuthentication no"
  notify: "Restart sshd"
  # shell:
  #   cmd: "sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config"
    
- name: "Deploying ===> app.js"
  copy:
    src: "app.js"
    dest: "/home/ansible/"
    owner: "ansible"
    mode: "0644"

- name: "Deploying ===> packages.json"
  copy:
    src: "package.json"
    dest: "/home/ansible/package.json"
    owner: "ansible"
    mode: "0644"

- name: "Install app dependencies defined in package.json"
  npm: 
    path: "/home/ansible/"

- name: "Install Forever (to run our Node.js app)"
  npm: 
    name: forever
    global: yes
    state: latest

- name: "NPM install package express"
  npm:
    name:  express
    state: latest
    global: yes
    path: "/home/ansible/"

- name: "Ensure firewalld is stopped (since this is a test server)"
  service: 
    name: firewalld  
    state: stopped

# - name: Check list of running Node.js apps.
#   command: "forever list"
#   register: forever_list
#   changed_when: false

- name: "Start example Node.js app in 8080 port"
  command: "forever start app.js"
  # when: "forever_list.stdout.find('/home/{{ home }}/app.js') == -1"

- name: "Waiting for status of app.js for 30 second"
  wait_for:
    timeout: 30

- name: "Wget localhost:80"
  get_url:
    url:  "http://localhost:80"
    dest: "/home/{{ home }}/"
    mode: '0755'
  register: result

- name: "get_url status"
  debug:
    var: "{{ item }}"
  loop:
    - result.status_code
    - result.url
